"""
main.py ‚Äî —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ Telegram-–±–æ—Ç–∞
----------------------------------------------------

* Web-hook (`/`) –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram.
* Keep-alive-–ø–∏–Ω–≥ —Ä–∞–∑ –≤ `PING_INTERVAL` —Å–µ–∫ –Ω–µ –¥–∞—ë—Ç Render ¬´—É—Å–Ω—É—Ç—å¬ª.
* Scheduler –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –±–∞–∑—É (`api.run`)
  –∏ —Ä–∞—Å—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è.

‚ÄºÔ∏è –¢—Ä–µ–±—É–µ—Ç python-telegram-bot, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π c extra `[job-queue]`
    pip install "python-telegram-bot[job-queue]"
"""

from http import HTTPStatus
from typing import Any, Dict

import aiohttp
import asyncio
import uvicorn
from fastapi import Request, Response
from telegram import Update
from telegram.ext import (
    Application,
    CallbackQueryHandler,
    CommandHandler,
    ContextTypes,
    ExtBot,
    JobQueue,
    MessageHandler,
    filters,
)

import config
from api import app
from bot import commands, handlers
from bot.convos import handlers as convo_handlers
from bot.ptb import ptb
from common.log import logger

# ---------------------------------------------------------------------------
# üîí –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É
# ---------------------------------------------------------------------------
only_allowed = filters.User(config.ALLOWED_USERS)

# ---------------------------------------------------------------------------
#  Keep-alive: —á—Ç–æ–±—ã Render-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ ¬´–∑–∞—Å—ã–ø–∞–ª¬ª –ø–æ-–ø—Ä–æ—à–µ—Å—Ç–≤–∏–∏ 15 –º–∏–Ω
# ---------------------------------------------------------------------------
KEEP_ALIVE_URL = "https://cron-telebot-main1.onrender.com/"
PING_INTERVAL = 5 * 60          # —Å–µ–∫—É–Ω–¥
OWNER_ID = 429466372            # –≤–∞—à Telegram-id
SEND_PING_MESSAGE = False       # True ‚Üí –±–æ—Ç —à–ª—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ; False ‚Üí –æ–±—ã—á–Ω—ã–π HTTP-ping


async def _ping(_: ContextTypes.DEFAULT_TYPE) -> None:
    """–†–∞–∑ –≤ PING_INTERVAL: HTTP-–∑–∞–ø—Ä–æ—Å –∫ —Å–µ–±–µ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü—É."""
    try:
        if SEND_PING_MESSAGE:
            await ptb.bot.send_message(OWNER_ID, "ping")
        else:
            async with aiohttp.ClientSession() as sess:
                await sess.get(KEEP_ALIVE_URL, timeout=10)
        logger.info("PING ok")
    except Exception as exc:                               # noqa: BLE001
        logger.warning("PING failed: %s", exc)


# ---------------------------------------------------------------------------
#  Scheduler: –≤—ã–∑—ã–≤–∞–µ–º ¬´—Ä–∞—Å—Å—ã–ª—å—â–∏–∫¬ª (`api.run`) –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫
# ---------------------------------------------------------------------------
async def _run_scheduler(_: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ò–º–∏—Ç–∞—Ü–∏—è GET /api ‚Äî –∑–∞–±–∏—Ä–∞–µ—Ç –∏–∑ Mongo –∑–∞–ø–∏—Å–∏ —Å –∏—Å—Ç–µ–∫—à–∏–º `nextrun_ts`
    –∏ —Ä–∞—Å—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
    """
    from api import run as process_jobs                   # –ª–æ–∫–∞–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç ‚¨Ö
    await asyncio.to_thread(process_jobs)                 # –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º event-loop


# ---------------------------------------------------------------------------
#  –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
# ---------------------------------------------------------------------------
async def error(update: object, context: ContextTypes.DEFAULT_TYPE) -> None:      # noqa: ANN001
    logger.warning('Update "%s" caused error "%s"', update, context.error)


# ---------------------------------------------------------------------------
#  –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
# ---------------------------------------------------------------------------
def add_handlers(
    dp: Application[
        ExtBot[None],
        ContextTypes.DEFAULT_TYPE,
        Dict[Any, Any],
        Dict[Any, Any],
        Dict[Any, Any],
        JobQueue[ContextTypes.DEFAULT_TYPE],
    ],
) -> None:
    # conversations
    dp.add_handler(convo_handlers.edit_handler)
    dp.add_handler(convo_handlers.config_chat_handler)

    # –∫–æ–º–∞–Ω–¥—ã
    dp.add_handler(CommandHandler("start",        commands.start,        filters=only_allowed))
    dp.add_handler(CommandHandler("help",         commands.help,         filters=only_allowed))
    dp.add_handler(CommandHandler("add",          commands.add,          filters=only_allowed))
    dp.add_handler(CommandHandler("delete",       commands.delete,       filters=only_allowed))
    dp.add_handler(CommandHandler("list",         commands.list_jobs,    filters=only_allowed))
    dp.add_handler(CommandHandler("checkcron",    commands.checkcron,    filters=only_allowed))
    dp.add_handler(CommandHandler("options",      commands.list_options, filters=only_allowed))
    dp.add_handler(CommandHandler("adminsonly",   commands.option_restrict_to_admins, filters=only_allowed))
    dp.add_handler(CommandHandler("creatoronly",  commands.option_restrict_to_user,   filters=only_allowed))
    dp.add_handler(CommandHandler("changetz",     commands.change_tz,    filters=only_allowed))
    dp.add_handler(CommandHandler("reset",        commands.reset,        filters=only_allowed))
    dp.add_handler(CommandHandler("addmultiple",  commands.add_multiple, filters=only_allowed))

    # —Å–æ–æ–±—â–µ–Ω–∏—è
    dp.add_handler(MessageHandler(filters.TEXT  & only_allowed, handlers.handle_messages))
    dp.add_handler(MessageHandler(filters.PHOTO & only_allowed, handlers.handle_photos))
    dp.add_handler(MessageHandler(filters.POLL  & only_allowed, handlers.handle_polls))

    # –∫–Ω–æ–ø–∫–∏
    dp.add_handler(CallbackQueryHandler(handlers.handle_callback, only_allowed))

    # –æ—à–∏–±–∫–∏
    dp.add_error_handler(error)


add_handlers(ptb)

# ---------------------------------------------------------------------------
#  –ü–ª–∞–Ω–∏—Ä—É–µ–º —Ñ–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ —á–µ—Ä–µ–∑ JobQueue (–µ—Å–ª–∏ –æ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞)
# ---------------------------------------------------------------------------
if ptb.job_queue is not None:
    ptb.job_queue.run_repeating(_ping,          interval=PING_INTERVAL, first=30)
    ptb.job_queue.run_repeating(_run_scheduler, interval=60,            first=10)
else:
    logger.warning("JobQueue not available ‚Äî keep-alive / scheduler disabled!")

# ---------------------------------------------------------------------------
#  Web-hook (Render)  / Polling (–ª–æ–∫–∞–ª—å–Ω–æ)
# ---------------------------------------------------------------------------
if config.ENV:
    @app.post("/")
    async def process_update(request: Request):
        req = await request.json()
        update = Update.de_json(req, ptb.bot)
        await ptb.process_update(update)
        return Response(status_code=HTTPStatus.OK)
else:
    # –ª–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º (python main.py)
    if __name__ == "__main__":
        ptb.run_polling()

# –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ gunicorn –≤ –ø—Ä–æ–¥–µ
if __name__ == "__main__" and config.ENV:
    uvicorn.run(app, host="0.0.0.0", port=8000)
